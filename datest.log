Using network 'test'.

Compiling ./contracts/DepositContract.sol...
Compiling ./contracts/TokenContract.sol...
Compiling ./contracts/dependencies/AddressUtils.sol...
Compiling ./contracts/dependencies/BytesLib.sol...
Compiling ./contracts/dependencies/ERC721Basic.sol...
Compiling ./contracts/dependencies/ERC721BasicToken.sol...
Compiling ./contracts/dependencies/Ownable.sol...
Compiling ./contracts/dependencies/RLP.sol...
Compiling ./contracts/dependencies/SafeMath.sol...
Compiling ./contracts/mocks/DepositContractMock.sol...

Compilation warnings encountered:

/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/Ownable.sol:6:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:39:10: Warning: Use of the "var" keyword is deprecated.
         var ptr = self._unsafe_nextPtr;
         ^-----^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:40:10: Warning: Use of the "var" keyword is deprecated.
         var itemLength = _itemLength(ptr);
         ^------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:57:6: Warning: Use of the "var" keyword is deprecated.
     var item = self._unsafe_item;
     ^------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:83:6: Warning: Use of the "var" keyword is deprecated.
     var item = toRLPItem(self);
     ^------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:178:6: Warning: Use of the "var" keyword is deprecated.
     var len = self._unsafe_length;
     ^-----^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:192:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:192:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:204:6: Warning: Use of the "var" keyword is deprecated.
     var numItems = items(self);
     ^----------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:206:6: Warning: Use of the "var" keyword is deprecated.
     var it = iterator(self);
     ^----^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:221:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:221:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:234:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:234:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:249:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:249:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:268:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:268:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:301:11: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
          ^-------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:301:22: Warning: Use of the "var" keyword is deprecated.
     var (rStartPos, len) = _decode(self);
                     ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:141:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:227:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:271:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:313:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:352:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:393:14: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
             tag_loop:
             ^------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:393:14: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
             tag_loop:
             ^------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:394:18: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                 jumpi(end, eq(i, words))
                 ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:400:18: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                 jump(tag_loop)
                 ^------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:401:14: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
             end:
             ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:401:14: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
             end:
             ^-^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:50:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(contractState) == keccak256("preStaked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:50:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(contractState) == keccak256("preStaked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:56:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(contractState) == keccak256("staked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:56:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(contractState) == keccak256("staked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:141:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory rawTxList'?
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:185:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    challengeRecipient[_tokenId].send((tokenIdToAmount[_tokenId] ) +
    ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:203:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    challengeRecipient[_tokenId].send(challengeStake[_tokenId]);
    ^---------------------------------------------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:227:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory rawTxList'?
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:241:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    _to.send(challengeStake[_tokenId]);
    ^--------------------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:271:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory rawTxList'?
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:313:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory rawTxList'?
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:352:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory rawTxList'?
    bytes[] rawTxList;
    ^---------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:41:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(contractState) == keccak256("preStaked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:41:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(contractState) == keccak256("preStaked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:47:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(contractState) == keccak256("staked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:47:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(contractState) == keccak256("staked"))  {
        ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/Ownable.sol:6:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/Ownable.sol:15:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:39:3: Warning: No visibility specified. Defaulting to "public". 
  constructor (address _custodian) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:303:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function challengeWithPastCustody(address _to,
                                    ^---------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:346:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function submitCustodianDoubleSign(address _to,
                                     ^---------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/ERC721BasicToken.sol:218:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    address _from,
    ^-----------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/ERC721BasicToken.sol:220:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    uint256 _tokenId,
    ^--------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/ERC721BasicToken.sol:221:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    bytes _data
    ^---------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  constructor (address _custodian) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/mocks/DepositContractMock.sol:6:15: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  constructor(address _custodian) public
              ^----------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:435:3: Warning: Function state mutability can be restricted to pure
  function sliceBytes32Arr(bytes32[] _bytes32ArrBundle, uint256 _startPosition, uint256 _length) internal returns (bytes) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:459:3: Warning: Function state mutability can be restricted to pure
  function parseData(bytes data, uint256 i) internal returns (bytes) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:489:3: Warning: Function state mutability can be restricted to pure
  function stringToBytes( string s) internal returns (bytes memory b3){
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:495:3: Warning: Function state mutability can be restricted to pure
  function uint256ToBytes(uint256 x) internal returns (bytes b) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:501:3: Warning: Function state mutability can be restricted to pure
  function addressToBytes(address a) internal returns (bytes b) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/DepositContract.sol:510:3: Warning: Function state mutability can be restricted to pure
  function ecrecovery(bytes32 hash, bytes sig) public returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:171:3: Warning: Function state mutability can be restricted to pure
  function stringToBytes( string s) internal returns (bytes memory b3){
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:177:3: Warning: Function state mutability can be restricted to pure
  function uint256ToBytes(uint256 x) internal returns (bytes b) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:183:3: Warning: Function state mutability can be restricted to pure
  function addressToBytes(address a) internal returns (bytes b) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/TokenContract.sol:193:3: Warning: Function state mutability can be restricted to pure
  function bytes32ToUint256(bytes32 n) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/ERC721BasicToken.sol:217:3: Warning: Function state mutability can be restricted to view
  function checkAndCallSafeTransfer(
  ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:56:2: Warning: Function state mutability can be restricted to pure
 function hasNext(Iterator memory self) internal constant returns (bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:66:2: Warning: Function state mutability can be restricted to pure
 function toRLPItem(bytes memory self) internal constant returns (RLPItem memory) {
 ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:310:2: Warning: Function state mutability can be restricted to pure
 function _payloadOffset(RLPItem memory self) private constant returns (uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:328:2: Warning: Function state mutability can be restricted to pure
 function _itemLength(uint memPtr) private constant returns (uint len) {
 ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:356:2: Warning: Function state mutability can be restricted to pure
 function _decode(RLPItem memory self) private constant returns (uint memPtr, uint len) {
 ^ (Relevant source part starts here and spans across multiple lines).
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:394:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                 jumpi(end, eq(i, words))
                 ^----------------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:400:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                 jump(tag_loop)
                 ^------------^
,/Users/ben/Documents/GitHub/peaceNotRelay/contracts/dependencies/RLP.sol:408:6: Warning: Function state mutability can be restricted to pure
     function _validate(RLPItem memory self) private constant returns (bool ret) {
     ^ (Relevant source part starts here and spans across multiple lines).


[0m[0m
[0m  Contract: Deposit Contract[0m
undefined
  [32m  ✓[0m[90m should  deposit()[0m[33m (50ms)[0m

[0m  Contract: Deposit-Token Contract Interactions[0m
  [31m  1) "before each" hook for "should  mint() and then deposit()"[0m

[0m  Contract: Token Contract Test[0m
0x627306090abab3a6e1400e9345bc60c78a8bef57 0xf17f52151ebef6c7334fad080c5704d77216b732 0xc5fdf4076b8f3a5357c5e395ab970b5b54098fef
  [32m  ✓[0m[90m should mint()[0m[33m (51ms)[0m
TOKEN BigNumber {
  s: 1,
  e: 76,
  c:
   [ 8383876,
     10681944238953,
     79144750967306,
     81361783709543,
     68817385675308,
     60698722004166 ] }
  [31m  2) should transferFrom() and custodianApprove()[0m

    Events emitted during test:
    ---------------------------

    Transfer(_from: <indexed>, _to: <indexed>, _tokenId: <indexed>)
    Mint(amount: 10000, depositedTo: <indexed>, mintNonce: 0, tokenId: 0xb95b0ea2339bfb40fac88c6a77289ace77a9fd03c8bf836938d72c83a5466cc6)

    ---------------------------


[92m [0m[32m 2 passing[0m[90m (750ms)[0m
[31m  2 failing[0m

[0m  1) Contract: Deposit-Token Contract Interactions
       "before each" hook for "should  mint() and then deposit()":
[0m[31m     TypeError: depositContract.setCustodianETC is not a function[0m[90m
      at Context.beforeEach (test/depositTokenInteraction.js:44:27)
      at process._tickCallback (internal/process/next_tick.js:68:7)
[0m
[0m  2) Contract: Token Contract Test
       should transferFrom() and custodianApprove():
[0m[31m     TypeError: tokenContract.transferFromTokenContract is not a function[0m[90m
      at Context.it (test/tokenContract.js:61:34)
      at process._tickCallback (internal/process/next_tick.js:68:7)
[0m


